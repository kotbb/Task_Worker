
CREATE TABLE Worker_
(
  ID INT NOT NULL IDENTITY(1,1),
  Name VARCHAR(50) NOT NULL,
  OverallRating NUMERIC(3,2) NULL CHECK (OverallRating BETWEEN 0 AND 5),
  PRIMARY KEY (ID)
);

CREATE TABLE Client_
(
  ID INT NOT NULL IDENTITY(1,1),
  Name VARCHAR(50) NOT NULL,
  Email VARCHAR(60) NOT NULL,
  Password VARCHAR(50) NOT NULL,
  City VARCHAR(50) NOT NULL,
  StreetName VARCHAR(50) NOT NULL,
  Country VARCHAR(50) NOT NULL,
  StreetNumber INT NULL,
  ApartmentNumber INT NULL,
  OverallRating NUMERIC(3,2) NULL CHECK (OverallRating BETWEEN 0 AND 5), 
  PRIMARY KEY (ID),
  UNIQUE (Email)
);
CREATE TABLE Task_
(
  ID INT NOT NULL IDENTITY(1,1),
  Name VARCHAR(50) NOT NULL,
  RequiredSpecialty VARCHAR(30) NOT NULL,
  AverageTimeNeeded Int NOT NULL, 
  AverageTaskFee DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE Request_
(
  ID INT NOT NULL IDENTITY(1,1),
  RequestTime DATE NOT NULL,
  PreferredTimeSlot DATE NOT NULL,
  Client_ID INT NOT NULL,
  Task_ID INT NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (Client_ID) REFERENCES Client_(ID) ON DELETE CASCADE,
  FOREIGN KEY (Task_ID) REFERENCES Task_(ID) ON DELETE CASCADE
);

CREATE TABLE RequestExecution (
    ActualTime DATETIME NOT NULL,  
    WorkerRating NUMERIC(2,1) NULL CHECK (WorkerRating BETWEEN 0 AND 5),  
    ClientRating NUMERIC(2,1) NULL CHECK (ClientRating BETWEEN 0 AND 5),
    RequestStatus VARCHAR(20) NULL CHECK (RequestStatus IN ('Pending', 'Completed', 'Failed')),
    ClientFeedback VARCHAR(255),
    WorkerFeedback VARCHAR(255),
    Worker_ID INT NOT NULL,
    Request_ID INT NOT NULL,
    PRIMARY KEY (Worker_ID, Request_ID),
    FOREIGN KEY (Worker_ID) REFERENCES Worker_(ID) ON DELETE CASCADE,
    FOREIGN KEY (Request_ID) REFERENCES Request_(ID) ON DELETE CASCADE
);

CREATE TABLE Perform
(
  Worker_ID INT NOT NULL,
  Task_ID INT NOT NULL,
  PRIMARY KEY (Worker_ID, Task_ID),
  FOREIGN KEY (Worker_ID) REFERENCES Worker_(ID) ON DELETE CASCADE,
  FOREIGN KEY (Task_ID) REFERENCES Task_(ID) ON DELETE CASCADE
);

CREATE TABLE Worker_Specialties
(
  Specialties VARCHAR(100) NOT NULL,
  Worker_ID INT NOT NULL,
  PRIMARY KEY (Specialties, Worker_ID),
  FOREIGN KEY (Worker_ID) REFERENCES Worker_(ID) ON DELETE CASCADE
);

CREATE TABLE Worker_AvailableTimeSlots
(
  AvailableTimeSlots DATETIME NOT NULL,
  Worker_ID INT NOT NULL,
  PRIMARY KEY (AvailableTimeSlots, Worker_ID),
  FOREIGN KEY (Worker_ID) REFERENCES Worker_(ID) ON DELETE CASCADE
);

CREATE TABLE Client_Phone
(
  PhoneNumber VARCHAR(16) NOT NULL,
  Client_ID INT NOT NULL,
  PRIMARY KEY (PhoneNumber,Client_ID),
  FOREIGN KEY (Client_ID) REFERENCES Client_(ID) ON DELETE CASCADE
);
CREATE TABLE Client_PaymentInfo
(
  CardHolderName VARCHAR(50) NOT NULL,
  CardNumber VARCHAR(16) NOT NULL,
  CVV NUMERIC(4,0) NOT NULL,
  ExpiryDate DATE NOT NULL,
  Client_ID INT NOT NULL,
  PRIMARY KEY (CardHolderName, CardNumber, CVV, ExpiryDate, Client_ID),
  FOREIGN KEY (Client_ID) REFERENCES Client_(ID) ON DELETE CASCADE
);

CREATE TABLE Worker_Locations
(
  City VARCHAR(50) NOT NULL,
  Street VARCHAR(50) NOT NULL,
  Country VARCHAR(50) NOT NULL,
  Worker_ID INT NOT NULL,
  PRIMARY KEY (City, Street, Country, Worker_ID),
  FOREIGN KEY (Worker_ID) REFERENCES Worker_(ID) ON DELETE CASCADE
);