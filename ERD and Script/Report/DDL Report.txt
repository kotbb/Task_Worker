


INSERT INTO Worker_ (Name, OverallRating) VALUES
('Eslam Hassan', 4.7), ('Mohamed Adel', 4.9), ('Ahmed Samir', 4.2), ('Sara Hany', 4.8);


INSERT INTO Worker_Specialties VALUES
('Plumbing', 1), ('Electricity', 2), ('Cleaning', 3), ('Plumbing', 4);


INSERT INTO Worker_AvailableTimeSlots VALUES
('2025-05-20 10:00:00', 1), ('2025-05-20 10:00:00', 2), ('2025-05-21 14:00:00', 3), ('2025-05-20 10:00:00', 4);


INSERT INTO Worker_Locations VALUES
('Cairo', 'Tahrir', 'Egypt', 1),
('Giza', 'Dokki', 'Egypt', 2),
('Cairo', 'Zamalek', 'Egypt', 3),
('Cairo', 'Heliopolis', 'Egypt', 4);


INSERT INTO Client_ (Name, Email, Password, City, StreetName, Country, StreetNumber, ApartmentNumber, OverallRating) VALUES
('Nour Ayman', 'nour@gmail.com', 'pass123', 'Cairo', 'Nasr City', 'Egypt', 12, 5, 4.5);


INSERT INTO Task_ (Name, RequiredSpecialty, AverageTimeNeeded, AverageTaskFee) VALUES
('Fix Leak', 'Plumbing', 60, 150.00),
('Install Light', 'Electricity', 45, 100.00),
('General Cleaning', 'Cleaning', 120, 200.00);


INSERT INTO Request_ (RequestTime, PreferredTimeSlot, Client_ID, Task_ID) VALUES
('2025-05-15', '2025-05-20', 1, 1),
('2025-05-15', '2025-05-20', 1, 2),
('2025-05-15', '2025-05-21', 1, 3);


INSERT INTO Perform VALUES
(1, 1), (2, 2), (3, 3), (4, 1);


INSERT INTO RequestExecution (ActualTime, WorkerRating, ClientRating, RequestStatus, ClientFeedback, WorkerFeedback, Worker_ID, Request_ID) VALUES
('2025-05-20 10:00:00', 5, 4.6, 'Completed', 'Great work', 'Thanks', 1, 1),
('2025-05-20 10:00:00', 4.8, 4.9, 'Completed', 'Perfect', 'Happy to help', 2, 2),
('2025-05-21 14:00:00', 4.5, 5.0, 'Completed', 'Excellent', 'Pleasure', 3, 3);

-- a. Find Matching Workers for a Request
SELECT DISTINCT W.ID, W.Name
FROM Request_ R
JOIN Task_ T ON R.Task_ID = T.ID
JOIN Worker_Specialties WS ON WS.Specialties = T.RequiredSpecialty
JOIN Worker_AvailableTimeSlots TS ON TS.AvailableTimeSlots = R.PreferredTimeSlot
JOIN Worker_Locations WL ON WL.City = (SELECT City FROM Client_ WHERE ID = R.Client_ID)
JOIN Worker_ W ON W.ID = WS.Worker_ID
WHERE R.ID = 1;

-- b. Total Due Wage for Each Worker
SELECT W.ID, W.Name,
       SUM(T.AverageTaskFee * (RE.ClientRating / 5.0)) AS TotalWage
FROM Worker_ W
JOIN RequestExecution RE ON W.ID = RE.Worker_ID
JOIN Request_ R ON RE.Request_ID = R.ID
JOIN Task_ T ON R.Task_ID = T.ID
WHERE R.RequestTime BETWEEN '2025-05-01' AND '2025-05-31'
  AND RE.RequestStatus = 'Completed'
GROUP BY W.ID, W.Name;

-- c. Most / Least Requested Task/Worker/Specialty
SELECT TOP 1 T.Name, COUNT(*) AS RequestCount
FROM Request_ R
JOIN Task_ T ON R.Task_ID = T.ID
GROUP BY T.Name
ORDER BY RequestCount DESC;

-- Most Requested Worker (SQL Server version)
SELECT TOP 1 W.Name, COUNT(*) AS ExecutionCount
FROM RequestExecution RE
JOIN Worker_ W ON RE.Worker_ID = W.ID
GROUP BY W.Name
ORDER BY ExecutionCount DESC;

-- Most Requested Specialty (SQL Server version)
SELECT TOP 1 T.RequiredSpecialty, COUNT(*) AS RequestCount
FROM Request_ R
JOIN Task_ T ON R.Task_ID = T.ID
GROUP BY T.RequiredSpecialty
ORDER BY RequestCount DESC;

-- d. Best Rated Worker Per Specialty
SELECT T.RequiredSpecialty, W.Name, AVG(RE.ClientRating) AS AvgRating
FROM RequestExecution RE
JOIN Worker_ W ON RE.Worker_ID = W.ID
JOIN Request_ R ON RE.Request_ID = R.ID
JOIN Task_ T ON R.Task_ID = T.ID
WHERE R.RequestTime BETWEEN '2025-05-01' AND '2025-05-31'
GROUP BY T.RequiredSpecialty, W.Name
HAVING AVG(RE.ClientRating) = (
  SELECT MAX(AvgR) FROM (
    SELECT AVG(RE2.ClientRating) AS AvgR
    FROM RequestExecution RE2
    JOIN Request_ R2 ON RE2.Request_ID = R2.ID
    JOIN Task_ T2 ON R2.Task_ID = T2.ID
    WHERE R2.RequestTime BETWEEN '2025-05-01' AND '2025-05-31'
      AND T2.RequiredSpecialty = T.RequiredSpecialty
    GROUP BY RE2.Worker_ID
  ) AS Ratings
);

-- e. Specialties with No Requests This Month
SELECT DISTINCT T.RequiredSpecialty
FROM Task_ T
WHERE T.ID NOT IN (
  SELECT Task_ID FROM Request_
  WHERE RequestTime BETWEEN '2025-05-01' AND '2025-05-31'
);

-- f. Workers With All Ratings â‰¥ 4.5
SELECT W.ID, W.Name
FROM Worker_ W
WHERE NOT EXISTS (
  SELECT 1 FROM RequestExecution RE
  WHERE RE.Worker_ID = W.ID AND RE.ClientRating < 4.5
);
